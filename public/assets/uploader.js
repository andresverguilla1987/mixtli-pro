
const $=s=>document.querySelector(s);const log=(m)=>{const el=$('#log');el.textContent+=(typeof m==='string'?m:JSON.stringify(m))+'\n';el.scrollTop=el.scrollHeight;};const fileInput=$('#file');const chooseBtn=$('#choose');const startBtn=$('#start');const fname=$('#fname');const bar=$('#bar');chooseBtn.addEventListener('click',()=>fileInput.click());fileInput.addEventListener('change',()=>{const f=fileInput.files?.[0];if(!f){startBtn.disabled=true;fname.textContent='Ning√∫n archivo seleccionado';return;}fname.textContent=f.name;startBtn.disabled=false;});async function initMultipart(filename,type){const res=await fetch('/api/uploads/multipart/init',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({filename,contentType:type})});if(!res.ok) throw new Error('init failed');return res.json();}async function signPart(key,uploadId,partNumber){const url=`/api/uploads/multipart/sign-part?key=${encodeURIComponent(key)}&uploadId=${encodeURIComponent(uploadId)}&partNumber=${partNumber}`;const res=await fetch(url);if(!res.ok) throw new Error('sign-part failed');return res.json();}async function completeMultipart(key,uploadId,parts){const res=await fetch('/api/uploads/multipart/complete',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({key,uploadId,parts})});if(!res.ok) throw new Error('complete failed');return res.json();}async function abortMultipart(key,uploadId){await fetch('/api/uploads/multipart/abort',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({key,uploadId})});}async function uploadFile(file){const CHUNK=10*1024*1024;let uploaded=0;bar.style.width='0%';log(`init... ${file.name}`);const {uploadId,key}=await initMultipart(file.name,file.type);log('INIT ok '+JSON.stringify({uploadId}));const parts=[];const totalParts=Math.ceil(file.size/CHUNK);for(let partNumber=1;partNumber<=totalParts;partNumber++){const start=(partNumber-1)*CHUNK;const end=Math.min(start+CHUNK,file.size);const blob=file.slice(start,end);const {url}=await signPart(key,uploadId,partNumber);const put=await fetch(url,{method:'PUT',body:blob,headers:{'Content-Type':'application/octet-stream'}});if(!put.ok){await abortMultipart(key,uploadId).catch(()=>{});throw new Error(`upload part ${partNumber} failed`);}const etag=put.headers.get('etag')||put.headers.get('ETag');parts.push({ETag:etag?.replace(/"/g,''),PartNumber:partNumber});uploaded=end;const pct=Math.round((uploaded/file.size)*100);bar.style.width=pct+'%';}const done=await completeMultipart(key,uploadId,parts);const finalUrl=done.location||done.urlPublic||done.urlSigned;alert('Subida completa: '+finalUrl);log('DONE '+finalUrl);}startBtn.addEventListener('click',async()=>{const f=fileInput.files?.[0];if(!f) return;startBtn.disabled=true;chooseBtn.disabled=true;try{await uploadFile(f);}catch(e){console.error(e);log('ERROR: '+e.message);}finally{startBtn.disabled=false;chooseBtn.disabled=false;}});
