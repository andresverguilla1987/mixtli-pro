{
  "info": {
    "_postman_id": "b7c3f659-3d7a-4a1f-b8bc-mixtli-smoke",
    "name": "Mixtli API – Smoke Auto",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "00 - Salud",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{BASE_URL}}/salud",
          "host": [
            "{{BASE_URL}}"
          ],
          "path": [
            "salud"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('200 OK', () => pm.response.to.have.status(200));",
              "const j = pm.response.json();",
              "pm.test('status ok', () => j.status === 'ok');"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "10 - Listar usuarios",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{BASE_URL}}/api/users",
          "host": [
            "{{BASE_URL}}"
          ],
          "path": [
            "api",
            "users"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('200 OK', () => pm.response.to.have.status(200));"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "20 - Crear usuario (email único)",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.environment.set('timestamp', Date.now());",
              "pm.environment.set('email', `demo_${pm.environment.get('timestamp')}@example.com`);"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('201 Created', () => pm.response.to.have.status(201));",
              "const j = pm.response.json();",
              "pm.test('ok true', () => j.ok === true);",
              "pm.environment.set('userId', String(j.data.id));",
              "pm.environment.set('email', j.data.email);",
              "console.log('userId:', pm.environment.get('userId'));"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"nombre\": \"Usuario Demo\", \"email\": \"{{email}}\"}"
        },
        "url": {
          "raw": "{{BASE_URL}}/api/users",
          "host": [
            "{{BASE_URL}}"
          ],
          "path": [
            "api",
            "users"
          ]
        }
      }
    },
    {
      "name": "30 - Actualizar usuario (PUT /api/users/:id)",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"nombre\": \"Usuario Demo Actualizado\"}"
        },
        "url": {
          "raw": "{{BASE_URL}}/api/users/{{userId}}",
          "host": [
            "{{BASE_URL}}"
          ],
          "path": [
            "api",
            "users",
            "{{userId}}"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('200 OK', () => pm.response.to.have.status(200));",
              "const j = pm.response.json();",
              "pm.test('nombre actualizado', () => j.data && /Actualizado/.test(j.data.nombre));"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "40 - Eliminar usuario (DELETE /api/users/:id)",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{BASE_URL}}/api/users/{{userId}}",
          "host": [
            "{{BASE_URL}}"
          ],
          "path": [
            "api",
            "users",
            "{{userId}}"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('200 OK', () => pm.response.to.have.status(200));",
              "const j = pm.response.json();",
              "pm.test('ok true', () => j.ok === true);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}