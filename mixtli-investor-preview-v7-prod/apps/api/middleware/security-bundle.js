const helmet=require('helmet'); const rateLimit=require('express-rate-limit'); const client=require('prom-client'); const limiter429=new client.Counter({name:'http_429_total',help:'Respuestas 429 (rate limit)',labelNames:['route','ip']}); function securityHeaders(){return helmet({contentSecurityPolicy:{useDefaults:true,directives:{"default-src":["'self'"]}},referrerPolicy:{policy:'no-referrer'},crossOriginResourcePolicy:{policy:'same-site'},crossOriginOpenerPolicy:{policy:'same-origin'},});} function makeLimiter(opts={}){const limiter=rateLimit({windowMs:opts.windowMs||60_000,limit:opts.limit||120,standardHeaders:'draft-7',legacyHeaders:false,handler(req,res){limiter429.inc({route:req.route?.path||req.path,ip:req.ip||'unknown'});res.status(429).json({ok:false,error:'Too Many Requests'});}}); return limiter;} function auditLogger(){return function(req,res,next){res.on('finish',()=>{if(!['POST','PUT','PATCH','DELETE'].includes(req.method))return; const entry={audit:true,method:req.method,route:req.route?.path||req.path,status:res.statusCode,userId:req.user?.id||req.headers['x-user-id']||null,tenant:req.headers['x-tenant-id']||null,requestId:req.requestId,ts:new Date().toISOString(),}; if(req.log&&typeof req.log.info==='function') req.log.info(entry,'audit'); else console.log(JSON.stringify(entry));}); next();}} module.exports={securityHeaders,makeLimiter,auditLogger};